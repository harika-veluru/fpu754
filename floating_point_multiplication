module floating_point_multiplier (
    input [31:0] float_a,
    input [31:0] float_b,
    output reg [31:0] result
);

    reg [7:0] exponent_a;
  reg [22:0] mantissa_a;
    reg [7:0] exponent_b;
    reg [22:0] mantissa_b;
    reg [7:0] new_exponent;
    reg [47:0] multiplied_mantissa;
    reg [22:0] res_mantissa;
    reg [7:0] exponent;
	
    initial begin
        result = 32'b0;
    end

    always @* begin
        exponent_a = float_a[30:23];
        mantissa_a = float_a[22:0];

        exponent_b = float_b[30:23];
        mantissa_b = float_b[22:0];

        new_exponent = exponent_a + exponent_b - 127;

        multiplied_mantissa = {1'b1, mantissa_a} * {1'b1, mantissa_b};

        if (multiplied_mantissa[47]) begin
            res_mantissa = multiplied_mantissa[46:24];
            exponent = new_exponent + 1;
        end else begin
            res_mantissa = multiplied_mantissa[45:23];
            exponent = new_exponent;
        end

        result[31] = float_a[31] ^ float_b[31];
        result[30:23] = exponent;
        result[22:0] = res_mantissa[22:0];
    end

endmodule
